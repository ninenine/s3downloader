name: Go Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers the workflow for version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      - name: Build application
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o s3downloader-${{ matrix.goos }}-${{ matrix.goarch }} cmd/main.go

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: s3downloader-${{ matrix.goos }}-${{ matrix.goarch }}
          path: s3downloader-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts Linux AMD64
        uses: actions/download-artifact@v2
        with:
          name: s3downloader-linux-amd64

      - name: Download build artifacts Linux ARM64
        uses: actions/download-artifact@v2
        with:
          name: s3downloader-linux-arm64

      - name: Download build artifacts Darwin AMD64
        uses: actions/download-artifact@v2
        with:
          name: s3downloader-darwin-amd64

      - name: Download build artifacts Darwin ARM64
        uses: actions/download-artifact@v2
        with:
          name: s3downloader-darwin-arm64

      - name: Download build artifacts Windows AMD64
        uses: actions/download-artifact@v2
        with:
          name: s3downloader-windows-amd64

      - name: Download build artifacts Windows ARM64
        uses: actions/download-artifact@v2
        with:
          name: s3downloader-windows-arm64

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Linux AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: s3downloader-linux-amd64
          asset_name: s3downloader-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Linux ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: s3downloader-linux-arm64
          asset_name: s3downloader-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Darwin AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: s3downloader-darwin-amd64
          asset_name: s3downloader-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Darwin ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: s3downloader-darwin-arm64
          asset_name: s3downloader-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: s3downloader-windows-amd64
          asset_name: s3downloader-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: s3downloader-windows-arm64
          asset_name: s3downloader-windows-arm64.exe
          asset_content_type: application/octet-stream
